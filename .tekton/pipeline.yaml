---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: GIT_REPO
      description: The URL to the git repo
      type: string
    - name: GIT_REF
      description: The reference (branch or ref)
      type: string
      default: master
    - name: APP_NAME
      description: Name of the application
      type: string
      default: shopcarts
    - name: IMAGE_NAME
      description: The name of the image to build
      type: string
      default: 'image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.APP_NAME):latest'
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REF)
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: 'registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:20195b44af8e0b2238148003aacb2b278a9c3468893b3967da45e7ae1c3b2e9b'
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: linting
      params:
        - name: image
          value: 'docker.io/python:3.11-slim'
        - name: path
          value: service
        - name: args
          value: []
        - name: requirements-file
          value: requirements.txt
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pylint
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: testing
      params:
        - name: pytest-args
          value:
            - '--pspec'
            - '--cov=service'
            - '--cov-fail-under=95'
        - name: secret-name
          value: postgres-creds
        - name: secret-key
          value: database_uri
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pytest-env
      workspaces:
        - name: source
          workspace: pipeline-workspace
      
